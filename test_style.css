/* 
p.bar p태그 bar 클래스가 있어야 적용

.bar.foo foo 와 bar 클래스 모두 있어야 적용

#foo.bar foo 아이디와 bar 클래스 모두 있어야 적용

p[class] p 태그에 class 속성이 있어야 적용

p[class][id] p 태그에 class 속성과 id 속성 모두 있어야 적용

p[class = "foo"] p 태그에 foo 클래스가 있어야 적용

p[id = "foo"] p 태그에 foo 아이디가 있어야 적용

p[class = "foo"][id="title"] p 태그에 foo 클래스와 title 아이디가 있어야 적용

[class~="bar"] : class 속성의 값이 공백으로 구분한 "bar" 단어가 포함되는 요소 선택

[class^="bar"] : class 속성의 값이 "bar"로 시작하는 요소 선택

[class$="bar"] : class 속성의 값이 "bar"로 끝나는 요소 선택

[class*="bar"] : class 속성의 값이 "bar" 문자가 포함되는 요소 선택

div span  <div>의 자손 요소인 <span>를 선택하는 선택자 

div > h1 <div>의 자식 요소인 <h1>를 선택하는 선택자 

div + p 인접 형제 선택자는 형제 관계이면서 바로 뒤에 인접해 있는 요소를 선택하는 선택자


//가상클래스//
:first-child : 첫 번째 자식 요소 선택

:last-child : 마지막 자식 요소 선택

:link : 하이퍼 링크이면서 아직 방문하지 않은 앵커

:visited : 이미 방문한 하이퍼링크를 의미

:focus: 현재 입력 초점을 가진 요소에 적용

:hover: 마우스 포인터가 있는 요소에 적용

:active: 사용자 입력으로 활성화된 요소에 적용

//가상요소//
:before : 가장 앞에 요소를 삽입

:after : 가장 뒤에 요소를 삽입

:first-line : 요소의 첫 번째 줄에 있는 텍스트

:first-letter : 블록 레벨 요소의 첫 번째 문자

//구체성//
0, 1, 0, 0 : 선택자에 있는 모든 id 속성값

0, 0, 1, 0 : 선택자에 있는 모든 class 속성값, 기타 속성, 가상 클래스

0, 0, 0, 1 : 선택자에 있는 모든 요소, 가상 요소

인라인 스타일의 구체성 값은 1, 0, 0, 0

전체 선택자는 0, 0, 0, 0을 가진다.

조합자는 구체성에 영향을 주지 않는다. (>, + 등)

important 키워드는 별도의 구체성 값은 없지만, 모든 구체성을 무시하고 우선권을 갖는다.

important 키워드는 속성값 뒤 한 칸 공백을 주고 느낌표 기호와 함께 쓴다.

//상속//
박스 모델 속성들은 상속되지 않는다

상속된 속성은 아무런 구체성을 가지지 못한다.

//케스케이드 규칙//
1. 중요도(!important)와 출처
2. 구체성
3. 선언 순서

//상대 길이//
상대 길이

상대 길이는 다른 요소의 크기나 폰트 크기, 브라우저(viewport) 등의 크기에 따라 상대적으로 값이 변한다.

% 부모의 값에 대해서 백분율로 환산한 크기를 갖게 된다.

em font-size를 기준으로 값을 환산한다. 소수점 3자리까지 표현 가능하다.

rem root의 font-size를 기준으로 값을 환산한다.

vw viewport의 width값을 기준으로 1%의 값으로 계산된다.

//색상//

RGBA( )

RGBA 값은 기존 RGB에서 A값이 추가된 형태입니다.

rgb(R, G, B, A)의 형태로 각 변수는(R 적색, G 녹색, B 청색, A 투명도)의 강도를 정의합니다.

A 값은 0 ~ 1 사이의 값을 지정할 수 있으며, 0.5와 같이 소수점으로 표기합니다.

0 → 1은 투명 → 불투명으로 값의 변화를 나타냅니다.

예를 들어, rgba( 0, 0, 0, 0)는 투명한 색상을 가지게 됩니다.

//박스 모델
상, 우, 하, 좌 순서대로

//마진
좌우의 margin이 모두 auto로 적용 되었다면, 브라우저는 요소가 가질수 있는 가로 영역에서 자신의 'width'를 제외한 나머지 여백에 크기에 대해 균등 분할 하여 적용합니다. 이에 따라 요소는 수평 중앙 정렬이 됩니다.
*/


